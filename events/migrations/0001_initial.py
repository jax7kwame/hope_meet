# Generated by Django 5.0.4 on 2024-12-01 17:37

import django.db.models.deletion
import phone_field.models
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChurchOrGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True)),
                ('logo', models.ImageField(blank=True, upload_to='uploads/group_logos')),
                ('website_url', models.URLField(blank=True)),
                ('fb_link', models.CharField(blank=True, max_length=255, verbose_name='facebook link')),
                ('ig_link', models.CharField(blank=True, max_length=255, verbose_name='instagram link')),
                ('x_link', models.CharField(blank=True, max_length=255, verbose_name='x link')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField()),
            ],
            options={
                'verbose_name_plural': 'Counties',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField()),
                ('icon_style', models.TextField(blank=True, default='bi bi-calendar2-event')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True)),
                ('image1', models.ImageField(blank=True, null=True, upload_to='uploads/venue')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='uploads/venue')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='uploads/venue')),
                ('type', models.CharField(blank=True, max_length=100, verbose_name='Venue type')),
                ('location', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('address', models.CharField(blank=True, max_length=100)),
                ('phone', phone_field.models.PhoneField(blank=True, help_text='Contact phone number', max_length=31)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('website_url', models.URLField(blank=True)),
                ('fb_link', models.CharField(blank=True, max_length=255, verbose_name='facebook link')),
                ('ig_link', models.CharField(blank=True, max_length=255, verbose_name='instagram link')),
                ('x_link', models.CharField(blank=True, max_length=255, verbose_name='x link')),
                ('description', tinymce.models.HTMLField(null=True)),
                ('created_by', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='VenueType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField()),
                ('image', models.ImageField(blank=True, upload_to='uploads/events')),
                ('starting_date', models.DateField()),
                ('ending_date', models.DateField(blank=True, null=True)),
                ('starting_time', models.TimeField()),
                ('district', models.CharField(max_length=100)),
                ('conference', models.CharField(max_length=100)),
                ('description', tinymce.models.HTMLField(null=True)),
                ('location', models.CharField(max_length=100)),
                ('county', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('featured', models.BooleanField(default=False)),
                ('post_event', models.BooleanField(default=False)),
                ('church_or_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='events.churchorgroup')),
                ('county_local', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='events.county')),
                ('dislikes', models.ManyToManyField(blank=True, related_name='video_disliked', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='video_liked', to=settings.AUTH_USER_MODEL)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='events.eventcategory')),
                ('venue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='events.venue')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='uploads/speakers')),
                ('title', models.CharField(blank=True, max_length=50)),
                ('name', models.CharField(max_length=100)),
                ('organization', models.CharField(blank=True, max_length=100)),
                ('role', models.CharField(max_length=50)),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_speakers', to='events.event')),
            ],
        ),
        migrations.CreateModel(
            name='SponsorPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='uploads/sponsors_partners')),
                ('name', models.CharField(max_length=50)),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_sponsors_partners', to='events.event')),
            ],
        ),
        migrations.AddField(
            model_name='venue',
            name='venue_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='venue_types', to='events.venuetype'),
        ),
    ]
